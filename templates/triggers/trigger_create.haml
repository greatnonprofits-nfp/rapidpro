-extends "smartmin/base.html"
-load i18n

-block extra-style
  :css
    .help-block {
      font-size: 85%;
      color: #ccc;
    }

    .submit-button {
      margin-top:15px;
    }

    [class^="embedded-data-"] {
      margin: 0 0 5px 4px;
      font-weight: 400;
      font-size: 13px;
      letter-spacing: 0.05em;
      line-height: normal;
      color: rgb(119, 119, 119);
    }

    .embed-row {
      display: flex !important;
    }

    [class^="embed-field-"], [class^="embed-value-"] {
      width: 49%;
      margin: 0 5px 5px 0;
    }

    [class^="embed-field-"] > input,  [class^="embed-value-"] > input{
      width: 100% !important;
      font-size: 13px;
      padding: 7px;
      border-radius: var(--curvature-widget);;
      border: 1px solid var(--color-widget-border);
      color: var(--color-widget-text);
      outline: none;
    }

    [class^="embed-field-"] > input:read-only {
      background: #eee;
    }

    [class^="embed-value-"] > input:focus {
      background: var(--color-widget-bg-focused);
      border-color: var(--color-focus);
      box-shadow: var(--widget-box-shadow-focused);
    }

    .hidden {
      display: none;
    }

-block title  
  {{title}}

  .mb-3.text-xl.mt-2
    -trans "Triggers allow users to start flows based on user actions or schedules."
  
-block content
  -include "formax.haml"

-block extra-script
  {{ block.super }}
  <script src="{% url 'django.views.i18n.javascript_catalog' %}"></script>
  <script src="{{ STATIC_URL }}js/flow-parameters.js"></script>
  :javascript

    ["keyword", "schedule", "missed_call", "new_conversation", "referral", "catchall"].forEach(triggerType => {
      let triggerBody = document.querySelector(`#id-trigger-${triggerType}, #id-trigger-${triggerType.replace('_', '')}, #id-trigger-${triggerType.replace('_', '-')}`);
      if (triggerBody) {
        let flowElement = triggerBody.querySelector(`#id_${triggerType}_flow`);
        flowElement.addEventListener('change', function(event) {
          let selectedValue = event.target.values[0].value;
          let flowId = (selectedValue !== '' ? parseInt(selectedValue) : null);
          if (flowId) {
            var api_url = "{% url 'flows.flow_flow_parameters' %}?flow_id=" + flowId;
            $.getJSON(api_url).done(function(data) {
              buildTriggerFlowParams(data.results, [], triggerType);
            });
          } else {
            buildTriggerFlowParams([], [], triggerType);
          }
        });
      }
    });

    {% if trigger %}
    $(document).ready(function() {
      var trigger = '{{trigger}}';
      var flow = parseInt('{{flow}}');

      setTimeout(function () {
        switch(trigger) {
          case "keyword":
            var keywordTrigger = document.getElementById("id-trigger-keyword");
            keywordTrigger.scrollIntoView({behavior: 'smooth'});
            $('#id-trigger-keyword>.formax-icon').trigger('click');
            var flowSelect = document.querySelector('#id_keyword_flow');
            var optionToSelect = flowSelect.staticOptions.find(opt => opt.value == flow);
            flowSelect.setValue(optionToSelect);
            if (optionToSelect) {
              var api_url = "{% url 'flows.flow_flow_parameters' %}?flow_id=" + flow;
              $.getJSON(api_url).done(function(data) {
                buildTriggerFlowParams(data.results, [], 'keyword', keywordTrigger.shadowRoot);
              });
            } else {
              buildTriggerFlowParams([], [], 'keyword');
            }
            break;
          case "schedule":
            var scheduleTrigger = document.getElementById("id-trigger-schedule");
            scheduleTrigger.scrollIntoView({behavior: 'smooth'});
            $('#id-trigger-schedule>.formax-icon').trigger('click');
            var flowSelect = document.querySelector('#id_schedule_flow');
            var optionToSelect = flowSelect.staticOptions.find(opt => opt.value == flow);
            flowSelect.setValue(optionToSelect);
            if (optionToSelect) {
              var api_url = "{% url 'flows.flow_flow_parameters' %}?flow_id=" + flow;
              $.getJSON(api_url).done(function(data) {
                buildTriggerFlowParams(data.results, [], 'schedule', scheduleTrigger.shadowRoot);
              });
            } else {
              buildTriggerFlowParams([], [], 'schedule', scheduleTrigger.shadowRoot);
            }
            break;
        }
      }, 1000)
    });
    {% endif %}
